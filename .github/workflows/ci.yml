name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GEMINI: ${{ secrets.GEMINI }}
      API_KEY: ${{ secrets.API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # Build frontend and copy to backend
      - name: Build frontend
        working-directory: ./app-frontend
        run: |
          npm install --force
          npm run build

      - name: Copy frontend build to backend
        run: |
          rm -rf ./app-backend/dist
          cp -r ./app-frontend/dist ./app-backend/

      # Install backend dependencies and start backend
      - name: Install backend dependencies and start backend
        working-directory: ./app-backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          nohup python app.py &
          echo $! > backend.pid
          sleep 10  # Wait for the backend to start

      # Run Playwright tests
      - name: Run Playwright tests
        working-directory: ./testing
        run: |
          npm ci
          npx playwright install --with-deps
          npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: ./testing/playwright-report/
          retention-days: 30

  backend-test:
    runs-on: ubuntu-latest
    env:
      GEMINI: ${{ secrets.GEMINI }}
      API_KEY: ${{ secrets.API_KEY }}
      HUGGINGFACE_TOKEN: ${{ secrets.HUGGINGFACE_TOKEN}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: ./app-backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests
        working-directory: ./app-backend
        run: |
          python testing.py
